<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.ips.dao.ReptileTaskDao">
    
	<sql id="reptileTaskColumns">
				a.id AS "id",
				a.task_name AS "taskName",
				a.task_begin AS "taskBegin",
				a.task_end AS "taskEnd",
				a.task_state AS "taskState",
				a.start_mode AS "startMode",
				a.task_cron AS "taskCron",
				a.retry_times AS "retryTimes",
				a.url_layers AS "urlLayers",
				a.poi_type AS "poiType",
				a.website_id AS "websiteId.id",
				a.database_id AS "databaseId.id",
				a.table_name AS "tableName",
				a.crawler_id AS "crawlerId.id",
				a.create_by AS "createBy.id",
				a.create_date AS "createDate",
				a.storage_service_id AS "storageServiceId",
				a.update_by AS "updateBy.id",
				a.update_date AS "updateDate",
				a.remarks AS "remarks",
				a.del_flag AS "delFlag",
				a.task_type AS "taskType",
				a.website_url AS "websiteUrl",
				a.crawler_url AS "crawlerUrl",
				a.complate_time as "complateTime",
				w11.website_name AS "websiteId.websiteName",
				w12.database_name AS "databaseId.databaseName",
				w14.crawler_name AS "crawlerId.crawlerName",
				w14.crawler_json AS "crawlerId.crawlerJson"
	</sql>
	
	<sql id="reptileTaskJoins">
	   LEFT JOIN tb_website w11 ON w11.id= a.website_id
	   LEFT JOIN tb_database w12 ON w12.id= a.database_id
	   LEFT JOIN tb_crawler w14 ON w14.id= a.crawler_id
	</sql>
    
	<select id="get" resultType="ReptileTask">
		SELECT 
			<include refid="reptileTaskColumns"/>
		FROM tb_task a
		<include refid="reptileTaskJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ReptileTask">
		SELECT 
			<include refid="reptileTaskColumns"/>
		FROM tb_task a
		<include refid="reptileTaskJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="taskState != null and taskState != ''">
				AND a.task_state = #{taskState}
			</if>
			<if test="startMode != null and startMode != ''">
				AND a.start_mode = #{startMode}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ReptileTask">
		SELECT 
			<include refid="reptileTaskColumns"/>
		FROM tb_task a
		<include refid="reptileTaskJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tb_task(
			website_url,
			crawler_url,
			id,
			task_name,
			task_begin,
			task_end,
			task_state,
			start_mode,
			task_cron,
			retry_times,
			url_layers,
			poi_type,
			website_id,
			database_id,
			table_name,
			crawler_id,
			create_by,
			create_date,
			storage_service_id,
			update_by,
			update_date,
			remarks,
			del_flag,
			task_type
		) VALUES (
			#{websiteUrl},
			#{crawlerUrl},
			#{id},
			#{taskName},
			#{taskBegin},
			#{taskEnd},
			#{taskState},
			#{startMode},
			#{taskCron},
			#{retryTimes},
			#{urlLayers},
			#{poiType},
			#{websiteId.id},
			#{databaseId.id},
			#{tableName},
			#{crawlerId.id},
			#{createBy.id},
			#{createDate},
			#{storageServiceId},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{taskType}
		)
	</insert>
	
	<update id="update">
		UPDATE tb_task SET
			website_url = #{websiteUrl},
			crawler_url = #{crawlerUrl},
			task_name = #{taskName},
			task_begin = #{taskBegin},
			task_end = #{taskEnd},
			task_state = #{taskState},
			start_mode = #{startMode},
			task_cron = #{taskCron},
			retry_times = #{retryTimes},
			url_layers = #{urlLayers},
			poi_type = #{poiType},
			website_id = #{websiteId.id},
			database_id = #{databaseId.id},
			table_name = #{tableName},
			crawler_id = #{crawlerId.id},
			storage_service_id = #{storageServiceId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			del_flag = #{delFlag},
			task_type = #{taskType}
		WHERE id = #{id}
	</update>
	
	<update id="deleteById">
		UPDATE tb_task SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<select id="getTask" resultType="java.util.HashMap">

			SELECT
			t1.id as "task_id",
		   t1.task_name as "task_name",
			t1.website_url as "task_url",
		   t1.crawler_url as "task_file",
			t1.task_cron as "task_stime",
			t1.id as "task_topic",
		   t1.id as "task_tag",
			t2.website_token as "poi_key",
			t4.python_url as "python_file"
		FROM
			tb_task t1
		INNER JOIN tb_website t2 ON t1.website_id = t2.ID
		AND t2.del_flag = 0
		INNER JOIN tb_crawler t3 ON t3.ID = t1.crawler_id
		AND t3.del_flag = 0
		INNER JOIN tb_python_pkg t4 ON t4.id = t2.python_pkg_id
		AND t4.del_flag = 0
		INNER JOIN tb_database t5 ON t5.id = t1.database_id
		AND t5.del_flag = 0
		WHERE t1.ID=#{id} AND t1.del_flag=0

	</select>

	<update id="updateComplateTime">

		UPDATE tb_task SET
			complate_time=#{complateTime},
			task_state=#{taskState}
		WHERE id = #{id}

	</update>
	<select id="zcjl" resultType="java.lang.Integer">
		SELECT sum(add_count) zcjl from tb_task_data WHERE del_flag=0

	</select>
	<select id="jrcjl" resultType="java.lang.Integer">
		SELECT sum(add_count)zcjl from tb_task_data WHERE del_flag=0 AND to_days(data_date) = to_days(now());
	</select>
	<select id="zrws" resultType="java.lang.Integer">
		SELECT count(1) FROM tb_task WHERE del_flag='0'
	</select>
	<select id="zxzrws" resultType="java.lang.Integer">
		SELECT count(1) FROM tb_task WHERE del_flag='0' and task_state='执行中'
	</select>



	<select id="jrsjxq" resultType="java.util.Map">

		SELECT
			sum(t2.count) count,
			t3.website_name showname
		FROM
			tb_task t1
		INNER JOIN (
			SELECT
				SUM(add_count) count,
				task_id
			FROM
				tb_task_data
			WHERE
				TO_DAYS(data_date) = TO_DAYS(NOW())
			GROUP BY
				task_id
		) t2 ON t1.id = t2.task_id
		LEFT JOIN tb_website t3 ON t3.ID = t1.website_id
		WHERE
			t1.del_flag = 0
		AND t3.del_flag = 0
		GROUP BY
			showname

	</select>
	<select id="jrrwssxx" resultType="java.util.Map">
				SELECT
				t1.task_name,
				t1.id,
				t2.task_id,
				IFNULL(sum(t2.add_count), 0) count,
				t3.website_name showname,
				t1.task_state
			FROM
				tb_task t1
			LEFT JOIN tb_task_data t2 ON t1.id = t2.task_id
			LEFT JOIN tb_website t3 ON t3.ID = t1.website_id
			WHERE
				t1.del_flag = 0
			AND t3.del_flag = 0
			AND TO_DAYS(t1.create_date) = TO_DAYS(NOW())
			OR TO_DAYS(t2.data_date) = TO_DAYS(NOW())
			GROUP BY
				t2.task_id
	</select>

	<select id="jrsjtop" resultType="java.util.Map">
		SELECT SUM(t4.count) count,t4.showname from (SELECT
			t1.task_name,
			t1.id,
			t2.task_id,
			IFNULL(sum(t2.add_count), 0) count,
			t3.website_name showname,
			t1.task_state
		FROM
			tb_task t1
		LEFT JOIN tb_task_data t2 ON t1.id = t2.task_id
		LEFT JOIN tb_website t3 ON t3.ID = t1.website_id
		WHERE
			t1.del_flag = 0
		AND t3.del_flag = 0
		AND TO_DAYS(t1.create_date) = TO_DAYS(NOW())
		OR TO_DAYS(t2.data_date) = TO_DAYS(NOW())
		GROUP BY
			t2.task_id) t4 GROUP BY t4.showname ORDER BY t4.count desc LIMIT 0,5


	</select>

	<select id="rwbl" resultType="java.util.Map">
		SELECT COUNT(id) count,task_state  from tb_task WHERE TO_DAYS(create_date)=TO_DAYS(NOW()) GROUP BY task_state


	</select>
</mapper>